name: Release Homebrew Tap

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "SemVer version to release (e.g. 0.2.0)"
        required: true
      release_notes:
        description: "Release notes or changelog snippet"
        required: false
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: dotfiles
  HOMEBREW_TAP_REPOSITORY: TomoyukiSugiyama/homebrew-tap
  HOMEBREW_TAP_FORMULA_PATH: Formula/dotfiles.rb

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Apple targets
        run: rustup target add aarch64-apple-darwin x86_64-apple-darwin

      - name: Restore cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Build release binaries
        run: |
          set -euo pipefail
          cargo build --release --target aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          mkdir -p target/universal-apple-darwin
          lipo \
            target/aarch64-apple-darwin/release/${PROJECT_NAME} \
            target/x86_64-apple-darwin/release/${PROJECT_NAME} \
            -create \
            -output target/universal-apple-darwin/${PROJECT_NAME}

      - name: Determine release version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.release_version }}" ]; then
            VERSION="${{ github.event.inputs.release_version }}"
          else
            VERSION="${GITHUB_REF##*/}"
            VERSION="${VERSION#v}"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Package binary
        run: |
          set -euo pipefail
          ARCHIVE_NAME="${PROJECT_NAME}-${{ steps.version.outputs.version }}-universal-apple-darwin.tar.gz"
          ARCHIVE_PATH="target/universal-apple-darwin/${ARCHIVE_NAME}"
          tar -C target/universal-apple-darwin -czf "$ARCHIVE_PATH" "${PROJECT_NAME}"
          {
            echo "archive_name=$ARCHIVE_NAME"
            echo "archive_path=$ARCHIVE_PATH"
          } >> "$GITHUB_OUTPUT"
        id: package

      - name: Create GitHub Release
        id: create_release
        env:
          NOTES_FALLBACK: "Automated release for dotfiles v${{ steps.version.outputs.version }}"
        run: |
          set -euo pipefail
          BODY_INPUT="${{ github.event.inputs.release_notes }}"
          if [ -z "$BODY_INPUT" ]; then
            BODY_TEXT="$NOTES_FALLBACK"
          else
            BODY_TEXT="$BODY_INPUT"
          fi

          gh release create "v${{ steps.version.outputs.version }}" \
            "${{ steps.package.outputs.archive_path }}" \
            --repo "${{ github.repository }}" \
            --title "${{ steps.version.outputs.version }}" \
            --notes "$BODY_TEXT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate SHA256
        id: checksum
        run: |
          FILE="${{ steps.package.outputs.archive_path }}"
          SHASUM=$(shasum -a 256 "$FILE" | awk '{print $1}')
          echo "sha256=$SHASUM" >> "$GITHUB_OUTPUT"

      - name: Checkout Homebrew tap
        uses: actions/checkout@v5
        with:
          repository: ${{ env.HOMEBREW_TAP_REPOSITORY }}
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: tap-repo

      - name: Prepare formula update
        id: formula
        run: |
          set -euo pipefail
          FORMULA_FILE="tap-repo/${HOMEBREW_TAP_FORMULA_PATH}"
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/${{ steps.package.outputs.archive_name }}"
          HOMEPAGE="https://github.com/${{ github.repository }}"
          VERSION="${{ steps.version.outputs.version }}"
          SHA256="${{ steps.checksum.outputs.sha256 }}"

          mkdir -p "$(dirname "$FORMULA_FILE")"
          {
            printf 'class Dotfiles < Formula\n'
            printf '  desc "Terminal UI and CLI for dotfiles management"\n'
            printf '  homepage "%s"\n' "$HOMEPAGE"
            printf '  url "%s"\n' "$DOWNLOAD_URL"
            printf '  sha256 "%s"\n' "$SHA256"
            printf '  version "%s"\n' "$VERSION"
            printf '  license "MIT"\n\n'
            printf '  def install\n'
            printf '    bin.install "%s"\n' "$PROJECT_NAME"
            printf '  end\n\n'
            printf '  test do\n'
            printf '    system "#{bin}/%s", "--help"\n' "$PROJECT_NAME"
            printf '  end\n'
            printf 'end\n'
          } > "$FORMULA_FILE"

          git -C tap-repo status --short

      - name: Update Homebrew tap
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          commit-message: "chore: bump ${{ env.PROJECT_NAME }} to ${{ steps.version.outputs.version }}"
          branch: release/${{ env.PROJECT_NAME }}-${{ steps.version.outputs.version }}
          title: "chore: update ${{ env.PROJECT_NAME }} to v${{ steps.version.outputs.version }}"
          body: |
            Automated update for `${{ env.PROJECT_NAME }}` Homebrew formula.

            - Version: `${{ steps.version.outputs.version }}`
            - SHA256: `${{ steps.checksum.outputs.sha256 }}`
            - Source: `${{ github.repository }}`
          committer: GitHub <noreply@github.com>
          author: GitHub <noreply@github.com>
          repository: ${{ env.HOMEBREW_TAP_REPOSITORY }}
          base: main
          path: tap-repo

